plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.5'
  id 'io.spring.dependency-management' version '1.1.0'
}

group = 'ee.tafkin'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(21))
  }
}

dependencies {
  // Spring
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-cache'

  // Domain
  compileOnly 'org.projectlombok:lombok:1.18.38'
  annotationProcessor 'org.projectlombok:lombok:1.18.38'
  implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
  implementation 'org.apache.commons:commons-lang3:3.17.0'
  implementation 'commons-validator:commons-validator:1.9.0'

  // Data
  implementation 'org.flywaydb:flyway-core:11.8.0'
  runtimeOnly 'org.flywaydb:flyway-database-postgresql:11.8.0'
  implementation 'org.postgresql:postgresql:42.7.5'
  implementation 'com.github.ben-manes.caffeine:caffeine:3.2.0'

  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

  // Test
  testImplementation platform('org.junit:junit-bom:5.10.0')
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.testcontainers:postgresql:1.20.0'
}

test {
  useJUnitPlatform()
  testLogging {
    showStandardStreams = true
    events = ["passed", "failed", "skipped"]
  }
}

bootRun {
  configure {
    systemProperties System.properties
  }
  doFirst {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=n']
  }
}
